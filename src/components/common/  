import React, { createContext, useState, useContext, useEffect } from "react";
import { setup } from "../../model/setup";
import { QueryOrExpression } from "@orbit/data";
import JSONAPISource from "@orbit/jsonapi";

const a = createContext<{ source: JSONAPISource } | null>(null);

export const useQuery = (query: QueryOrExpression, options: object = {}) => {
    const [res, setRes] = useState(null);
    const { source } = useContext(a)!;

    useEffect(() => {
        if(!source) { return}
        source.query(query, options).then((e) => {
            setRes(e)
        });
    }, [source]);

    return res;
}

export const DataProvider: React.FC = (props) => {
    const [source, setSource] = useState();
    useEffect(() => {
        setup().then(setSource);
    }, [])

    return <a.Provider value={{ source }}>
        {props.children}
    </a.Provider>;
}